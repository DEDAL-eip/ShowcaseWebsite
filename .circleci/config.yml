version: 2.1
orbs:
  node: circleci/node@4.7.0
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - run:
          name: Update NPM
          command: "sudo npm install -g npm@5"
      - node/install-packages:
          pkg-manager: npm

  test:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: |
            npx playwright install --with-deps
            npm run test
      - run:
          name: Run ESLint
          command: npm run lint

  doc-dev:
    working_directory: ~/repoc
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Generate docs
          command: npm run doc
      - run:
          name: Update Docs
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "thomasgilletpc@gmail.com"
            git config user.name "Thomas GILLET [CI]"
            git pull origin ci/test-and-docs
            git add docs
            git commit -m ":memo: Update documentation [ci skip]"
            git push -q origin ci/test-and-docs
  
  doc-prod:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Generate docs
          command: npm run doc
      - run:
          name: Update Docs
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "thomasgilletpc@gmail.com"
            git config user.name "Thomas GILLET [CI]"
            git pull
            git add docs
            git commit -m ":memo: Update documentation [ci skip]"
            git push -q origin prod
  
  build-dev:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Clean build folder
          command: rm -rf build
      - run:
          name: Build
          command: npm run build
      - run:
          name: Move files
          command: cp public/* build/client
      - run:
          name: Push
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "thomasgilletpc@gmail.com"
            git config user.name "Thomas GILLET [CI]"
            git pull ci/test-and-docs
            git add build
            git commit -m ":rocket: Push build [ci skip]"
            git push -q origin ci/test-and-docs

  build-prod:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.13.2
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Clean build folder
          command: rm -rf build
      - run:
          name: Build
          command: npm run build
      - run:
          name: Move files
          command: cp public/* build/client
      - run:
          name: Push
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "thomasgilletpc@gmail.com"
            git config user.name "Thomas GILLET [CI]"
            git pull
            git add build
            git commit -m ":rocket: Push build [ci skip]"
            git push -q origin prod
            
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      # - test:
      #     requires:
      #       - build
      - doc-dev:
          requires:
            - build
            # - test
          # filters:
          #   branches:
          #     only:
          #       - dev
      - build-dev:
          requires:
            - build
            # - test
          # filters:
          #   branches:
          #     only:
          #       - dev
      - doc-prod:
          requires:
            - build
            # - test
          filters:
            branches:
              only:
                - prod
      - build-prod:
          requires:
            - build
            # - test
          filters:
            branches:
              only:
                - prod